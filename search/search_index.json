{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation Here lives my documentation. Useful links Markdown cheatsheet","title":"Documentation"},{"location":"#documentation","text":"","title":"Documentation"},{"location":"#here-lives-my-documentation","text":"","title":"Here lives my documentation."},{"location":"#useful-links","text":"Markdown cheatsheet","title":"Useful links"},{"location":"homelab-projects/letsencrypt/","text":"Letsencrypt Letsencrypt provide free SSL certificates. Initial Ideas I intially explored using Terraform to spin up an EC2 instance, run user-data to generate a certificate and then copy it locally. My initial expectation was that I would have to provide a Challenge-Response using a webserver (Apache, NGINX), thus the terraform, however I chose to instead use the AWS Route53 provider. This meant that I no longer required a publicly accessable EC2 instance. I then had a brief look at Dockerising the process so it would become one command and produce the output of the certificate. This was still not ideal as there would be a manual process of implementing the certificate output onto the services that used it. In the end - I ended up writing an Ansible role so that nodes could generate and install their own LE certificates as required.","title":"Letsencrypt"},{"location":"homelab-projects/letsencrypt/#letsencrypt","text":"Letsencrypt provide free SSL certificates.","title":"Letsencrypt"},{"location":"homelab-projects/letsencrypt/#initial-ideas","text":"I intially explored using Terraform to spin up an EC2 instance, run user-data to generate a certificate and then copy it locally. My initial expectation was that I would have to provide a Challenge-Response using a webserver (Apache, NGINX), thus the terraform, however I chose to instead use the AWS Route53 provider. This meant that I no longer required a publicly accessable EC2 instance. I then had a brief look at Dockerising the process so it would become one command and produce the output of the certificate. This was still not ideal as there would be a manual process of implementing the certificate output onto the services that used it. In the end - I ended up writing an Ansible role so that nodes could generate and install their own LE certificates as required.","title":"Initial Ideas"},{"location":"homelab-projects/overview/","text":"Homelab Overview Technologies Hypervisor / virtualisation: Kernel Kirtual Machines (KVM) Storage / NAS: FreeNAS Backups Time machine backups for macbooks SMB share for Windows clients NFS share for Linux clients Currently, no VM filesystems are backed up; ZFS takes care of that at the host level. Services Plex Media Server Confluence I no longer self-host an Atlassian Confluence instance. It was used solely for documentation which has now been replaced with mkdocs and github-pages.","title":"Homelab Overview"},{"location":"homelab-projects/overview/#homelab-overview","text":"","title":"Homelab Overview"},{"location":"homelab-projects/overview/#technologies","text":"Hypervisor / virtualisation: Kernel Kirtual Machines (KVM) Storage / NAS: FreeNAS Backups Time machine backups for macbooks SMB share for Windows clients NFS share for Linux clients Currently, no VM filesystems are backed up; ZFS takes care of that at the host level.","title":"Technologies"},{"location":"homelab-projects/overview/#services","text":"","title":"Services"},{"location":"homelab-projects/overview/#plex-media-server","text":"","title":"Plex Media Server"},{"location":"homelab-projects/overview/#confluence","text":"I no longer self-host an Atlassian Confluence instance. It was used solely for documentation which has now been replaced with mkdocs and github-pages.","title":"Confluence"},{"location":"homelab-projects/pi-hole/","text":"Pi-hole Raspberry Pi's are fantastic little pieces of cheap kit. One of mine is running pi-hole - a network wide ad blocking, DHCP and DNS server. It's extremely useful for my homelab providing local dynamic DNS. Pi-hole remains extremely similar to the DNS/DHCP technology it is built on - DNSMasq - therefore much of the configuration remains the same. Install curl -sSL https://install.pi-hole.net | bash Obligatory piping to bash is bad statement here. Configuration Pi-hole configuration is stored in /etc/pihole . The initial setup configuration is contained within /etc/pihole/setupVars.conf . Admin console Pi-hole comes with an admin console with pretty graphs. It's accessable at http://$MYHOSTNAME/admin . DHCP DHCP is disabled by default but can be turned on and configured via the admin portal. The configuration is stored in /etc/dnsmasq.d/ . Active DHCP leases are stored in /etc/dnsmasq.d/02-pihole-dhcp.conf and static IP addresses are configured in 04-pihole-static-dhcp.conf . DNS Ad-Blocking","title":"Pi-hole"},{"location":"homelab-projects/pi-hole/#pi-hole","text":"Raspberry Pi's are fantastic little pieces of cheap kit. One of mine is running pi-hole - a network wide ad blocking, DHCP and DNS server. It's extremely useful for my homelab providing local dynamic DNS. Pi-hole remains extremely similar to the DNS/DHCP technology it is built on - DNSMasq - therefore much of the configuration remains the same.","title":"Pi-hole"},{"location":"homelab-projects/pi-hole/#install","text":"curl -sSL https://install.pi-hole.net | bash Obligatory piping to bash is bad statement here.","title":"Install"},{"location":"homelab-projects/pi-hole/#configuration","text":"Pi-hole configuration is stored in /etc/pihole . The initial setup configuration is contained within /etc/pihole/setupVars.conf .","title":"Configuration"},{"location":"homelab-projects/pi-hole/#admin-console","text":"Pi-hole comes with an admin console with pretty graphs. It's accessable at http://$MYHOSTNAME/admin .","title":"Admin console"},{"location":"homelab-projects/pi-hole/#dhcp","text":"DHCP is disabled by default but can be turned on and configured via the admin portal. The configuration is stored in /etc/dnsmasq.d/ . Active DHCP leases are stored in /etc/dnsmasq.d/02-pihole-dhcp.conf and static IP addresses are configured in 04-pihole-static-dhcp.conf .","title":"DHCP"},{"location":"homelab-projects/pi-hole/#dns","text":"","title":"DNS"},{"location":"homelab-projects/pi-hole/#ad-blocking","text":"","title":"Ad-Blocking"},{"location":"linux/fail2ban/","text":"Fail2ban Installation To-do Managing jails List all currently blocked IP addresses in all jails fail2ban-client status | grep \"Jail list:\" | sed \"s/ //g\" | awk '{split($2,a,\",\");for(i in a) system(\"fail2ban-client status \" a[i])}' | grep \"Status\\|IP list\" Unban an IP address fail2ban-client set $JAIL_NAME unbanip 1.2.3.4","title":"Fail2ban"},{"location":"linux/fail2ban/#fail2ban","text":"","title":"Fail2ban"},{"location":"linux/fail2ban/#installation","text":"To-do","title":"Installation"},{"location":"linux/fail2ban/#managing-jails","text":"","title":"Managing jails"},{"location":"linux/fail2ban/#list-all-currently-blocked-ip-addresses-in-all-jails","text":"fail2ban-client status | grep \"Jail list:\" | sed \"s/ //g\" | awk '{split($2,a,\",\");for(i in a) system(\"fail2ban-client status \" a[i])}' | grep \"Status\\|IP list\"","title":"List all currently blocked IP addresses in all jails"},{"location":"linux/fail2ban/#unban-an-ip-address","text":"fail2ban-client set $JAIL_NAME unbanip 1.2.3.4","title":"Unban an IP address"},{"location":"linux/shell/","text":"Shell All things shell Miscellenous / Glorious one-liners Finds anything in current directory that isn't zipped and zips it find . -type f ! -iname '*.gz' -exec gzip \"{}\" \\; Get external IP from CLI dig +short myip.opendns.com @resolver1.opendns.com Move files based on date mv `ll | grep 'Jan 31' | awk '{print $9}' [DEST]` Puppet nuke yum -y remove $(rpm -qa | egrep 'puppet|^pe-') ; rm -rf /etc/puppetlabs /opt/puppetlabs /var/log/puppetlabs /etc/sysconfig/p{e-*,uppet} Print SWAP usage by process for file in /proc/*/status; do awk '/VmSwap|Name/{printf $2 \" \" $3}END{ print \"\"}' $file; done | sort -k 2 -n -r | less Test mail CLI echo \"Special delivery\" | mailx -s \"Hello\" -a testfile1 $EMAIL_ADDRESS Shell keepalive while true; do echo jh; sleep 30; done","title":"Shell"},{"location":"linux/shell/#shell","text":"All things shell","title":"Shell"},{"location":"linux/shell/#miscellenous-glorious-one-liners","text":"Finds anything in current directory that isn't zipped and zips it find . -type f ! -iname '*.gz' -exec gzip \"{}\" \\; Get external IP from CLI dig +short myip.opendns.com @resolver1.opendns.com Move files based on date mv `ll | grep 'Jan 31' | awk '{print $9}' [DEST]` Puppet nuke yum -y remove $(rpm -qa | egrep 'puppet|^pe-') ; rm -rf /etc/puppetlabs /opt/puppetlabs /var/log/puppetlabs /etc/sysconfig/p{e-*,uppet} Print SWAP usage by process for file in /proc/*/status; do awk '/VmSwap|Name/{printf $2 \" \" $3}END{ print \"\"}' $file; done | sort -k 2 -n -r | less Test mail CLI echo \"Special delivery\" | mailx -s \"Hello\" -a testfile1 $EMAIL_ADDRESS Shell keepalive while true; do echo jh; sleep 30; done","title":"Miscellenous / Glorious one-liners"},{"location":"linux/ssh/","text":"OpenSSH Configuration Boilerplate ssh configuration: ~/.ssh/id_rsa Host example Hostname example.jhcloud.io User jhughes Port 2222 IdentityFile ~/.ssh/id_rsa ForwardAgent yes ForwardX11 yes ProxyJump jhughes@jumphost.jhcloud.io Further reading OpenSSH Cookbook","title":"OpenSSH"},{"location":"linux/ssh/#openssh","text":"","title":"OpenSSH"},{"location":"linux/ssh/#configuration","text":"Boilerplate ssh configuration: ~/.ssh/id_rsa Host example Hostname example.jhcloud.io User jhughes Port 2222 IdentityFile ~/.ssh/id_rsa ForwardAgent yes ForwardX11 yes ProxyJump jhughes@jumphost.jhcloud.io","title":"Configuration"},{"location":"linux/ssh/#further-reading","text":"OpenSSH Cookbook","title":"Further reading"}]}