{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation Here lives my documentation. Useful links Markdown cheatsheet","title":"Documentation"},{"location":"#documentation","text":"","title":"Documentation"},{"location":"#here-lives-my-documentation","text":"","title":"Here lives my documentation."},{"location":"#useful-links","text":"Markdown cheatsheet","title":"Useful links"},{"location":"homelab-projects/letsencrypt/","text":"Letsencrypt Letsencrypt provide free SSL certificates. Initial Ideas I intially explored using Terraform to spin up an EC2 instance, run user-data to generate a certificate and then copy it locally. My initial expectation was that I would have to provide a Challenge-Response using a webserver (Apache, NGINX), thus the terraform, however I chose to instead use the AWS Route53 provider. This meant that I no longer required a publicly accessable EC2 instance. I then had a brief look at Dockerising the process so it would become one command and produce the output of the certificate. This was still not ideal as there would be a manual process of implementing the certificate output onto the services that used it. In the end - I ended up writing an Ansible role so that nodes could generate and install their own LE certificates as required.","title":"Letsencrypt"},{"location":"homelab-projects/letsencrypt/#letsencrypt","text":"Letsencrypt provide free SSL certificates.","title":"Letsencrypt"},{"location":"homelab-projects/letsencrypt/#initial-ideas","text":"I intially explored using Terraform to spin up an EC2 instance, run user-data to generate a certificate and then copy it locally. My initial expectation was that I would have to provide a Challenge-Response using a webserver (Apache, NGINX), thus the terraform, however I chose to instead use the AWS Route53 provider. This meant that I no longer required a publicly accessable EC2 instance. I then had a brief look at Dockerising the process so it would become one command and produce the output of the certificate. This was still not ideal as there would be a manual process of implementing the certificate output onto the services that used it. In the end - I ended up writing an Ansible role so that nodes could generate and install their own LE certificates as required.","title":"Initial Ideas"},{"location":"homelab-projects/overview/","text":"Homelab Overview Technologies Hypervisor / virtualisation: Kernel Kirtual Machines (KVM) Storage / NAS: FreeNAS Backups Time machine backups for macbooks SMB share for Windows clients NFS share for Linux clients Currently, no VM filesystems are backed up; ZFS takes care of that at the host level. Services Plex Media Server Confluence I no longer self-host an Atlassian Confluence instance. It was used solely for documentation which has now been replaced with mkdocs and github-pages.","title":"Homelab Overview"},{"location":"homelab-projects/overview/#homelab-overview","text":"","title":"Homelab Overview"},{"location":"homelab-projects/overview/#technologies","text":"Hypervisor / virtualisation: Kernel Kirtual Machines (KVM) Storage / NAS: FreeNAS Backups Time machine backups for macbooks SMB share for Windows clients NFS share for Linux clients Currently, no VM filesystems are backed up; ZFS takes care of that at the host level.","title":"Technologies"},{"location":"homelab-projects/overview/#services","text":"","title":"Services"},{"location":"homelab-projects/overview/#plex-media-server","text":"","title":"Plex Media Server"},{"location":"homelab-projects/overview/#confluence","text":"I no longer self-host an Atlassian Confluence instance. It was used solely for documentation which has now been replaced with mkdocs and github-pages.","title":"Confluence"},{"location":"homelab-projects/pi-hole/","text":"Pi-hole Raspberry Pi's are fantastic little pieces of cheap kit. One of mine is running pi-hole - a network wide ad blocking, DHCP and DNS server. It's extremely useful for my homelab providing local dynamic DNS. Pi-hole remains extremely similar to the DNS/DHCP technology it is built on - DNSMasq - therefore much of the configuration remains the same. Install 1 curl -sSL https://install.pi-hole.net | bash Obligatory piping to bash is bad statement here. Configuration Pi-hole configuration is stored in /etc/pihole . The initial setup configuration is contained within /etc/pihole/setupVars.conf . Admin console Pi-hole comes with an admin console with pretty graphs. It's accessable at http://$MYHOSTNAME/admin . Modify or remove admin password With console access, either local or SSH, run: 1 pihole -a -p Leave blank for no password on the admin portal. DHCP DHCP is disabled by default but can be turned on and configured via the admin portal. The configuration is stored in /etc/dnsmasq.d/ . Active DHCP leases are stored in /etc/dnsmasq.d/02-pihole-dhcp.conf and static IP addresses are configured in 04-pihole-static-dhcp.conf . DNS Ad-Blocking","title":"Pi-hole"},{"location":"homelab-projects/pi-hole/#pi-hole","text":"Raspberry Pi's are fantastic little pieces of cheap kit. One of mine is running pi-hole - a network wide ad blocking, DHCP and DNS server. It's extremely useful for my homelab providing local dynamic DNS. Pi-hole remains extremely similar to the DNS/DHCP technology it is built on - DNSMasq - therefore much of the configuration remains the same.","title":"Pi-hole"},{"location":"homelab-projects/pi-hole/#install","text":"1 curl -sSL https://install.pi-hole.net | bash Obligatory piping to bash is bad statement here.","title":"Install"},{"location":"homelab-projects/pi-hole/#configuration","text":"Pi-hole configuration is stored in /etc/pihole . The initial setup configuration is contained within /etc/pihole/setupVars.conf .","title":"Configuration"},{"location":"homelab-projects/pi-hole/#admin-console","text":"Pi-hole comes with an admin console with pretty graphs. It's accessable at http://$MYHOSTNAME/admin .","title":"Admin console"},{"location":"homelab-projects/pi-hole/#modify-or-remove-admin-password","text":"With console access, either local or SSH, run: 1 pihole -a -p Leave blank for no password on the admin portal.","title":"Modify or remove admin password"},{"location":"homelab-projects/pi-hole/#dhcp","text":"DHCP is disabled by default but can be turned on and configured via the admin portal. The configuration is stored in /etc/dnsmasq.d/ . Active DHCP leases are stored in /etc/dnsmasq.d/02-pihole-dhcp.conf and static IP addresses are configured in 04-pihole-static-dhcp.conf .","title":"DHCP"},{"location":"homelab-projects/pi-hole/#dns","text":"","title":"DNS"},{"location":"homelab-projects/pi-hole/#ad-blocking","text":"","title":"Ad-Blocking"},{"location":"linux/aws-cli/","text":"AWS CLI SSM Insert parameter into parameter store 1 aws ssm put-parameter --name $PARAM_NAME --type SecureString --value $PARAM_VALUE --key-id alias/ $KMS_KEY_NAME Retrieve parameter 1 aws ssm get-parameter --name $PARAM_NAME --with-decryption --region eu-west-2 --output text --query Parameter.Value","title":"AWS CLI"},{"location":"linux/aws-cli/#aws-cli","text":"","title":"AWS CLI"},{"location":"linux/aws-cli/#ssm","text":"Insert parameter into parameter store 1 aws ssm put-parameter --name $PARAM_NAME --type SecureString --value $PARAM_VALUE --key-id alias/ $KMS_KEY_NAME Retrieve parameter 1 aws ssm get-parameter --name $PARAM_NAME --with-decryption --region eu-west-2 --output text --query Parameter.Value","title":"SSM"},{"location":"linux/fail2ban/","text":"Fail2ban Installation To-do Managing jails List all currently blocked IP addresses in all jails 1 fail2ban-client status | grep Jail list: | sed s/ //g | awk {split($2,a, , );for(i in a) system( fail2ban-client status a[i])} | grep Status\\|IP list Unban an IP address 1 fail2ban-client set $JAIL_NAME unbanip 1 .2.3.4","title":"Fail2ban"},{"location":"linux/fail2ban/#fail2ban","text":"","title":"Fail2ban"},{"location":"linux/fail2ban/#installation","text":"To-do","title":"Installation"},{"location":"linux/fail2ban/#managing-jails","text":"List all currently blocked IP addresses in all jails 1 fail2ban-client status | grep Jail list: | sed s/ //g | awk {split($2,a, , );for(i in a) system( fail2ban-client status a[i])} | grep Status\\|IP list Unban an IP address 1 fail2ban-client set $JAIL_NAME unbanip 1 .2.3.4","title":"Managing jails"},{"location":"linux/freeipa/","text":"FreeIPA FreeIPA is a comprehensive suite of open source utilities providing an AD like service. User Management Add User Add Group Add User to Group Reset User Password 1 ipa user-mod john.smith --password Host Management Misc. Retrieve a list of all users in LDAP 1 ipa user-find --sizelimit = 0 | grep -i user login | awk {print $3} ipausers Retrieve a list of all hosts in LDAP 1 ipa host-find --sizelimit = 0 | grep -i host name | awk {print $3} Loop to determine last login dates from user list 1 2 3 while read i ; do echo $i : $( /bin/ipa user-status $i | grep successful ) done ipausers.txt Search for logins prior to $DATE 1 awk $NF 20170201 lastlogins E.g. 1 awk \u2018 $NF $( date -d \u201cnow -60 days\u201d )","title":"FreeIPA"},{"location":"linux/freeipa/#freeipa","text":"FreeIPA is a comprehensive suite of open source utilities providing an AD like service.","title":"FreeIPA"},{"location":"linux/freeipa/#user-management","text":"Add User Add Group Add User to Group Reset User Password 1 ipa user-mod john.smith --password","title":"User Management"},{"location":"linux/freeipa/#host-management","text":"","title":"Host Management"},{"location":"linux/freeipa/#misc","text":"Retrieve a list of all users in LDAP 1 ipa user-find --sizelimit = 0 | grep -i user login | awk {print $3} ipausers Retrieve a list of all hosts in LDAP 1 ipa host-find --sizelimit = 0 | grep -i host name | awk {print $3} Loop to determine last login dates from user list 1 2 3 while read i ; do echo $i : $( /bin/ipa user-status $i | grep successful ) done ipausers.txt Search for logins prior to $DATE 1 awk $NF 20170201 lastlogins E.g. 1 awk \u2018 $NF $( date -d \u201cnow -60 days\u201d )","title":"Misc."},{"location":"linux/shell/","text":"Shell All things shell Miscellenous / Glorious one-liners Finds anything in current directory that isn't zipped and zips it 1 find . -type f ! -iname *.gz -exec gzip {} \\; Get external IP from CLI Curl 1 curl http://checkip.amazonaws.com/ DNS 1 dig +short myip.opendns.com @resolver1.opendns.com Move files based on date 1 mv ` ll | grep Jan 31 | awk {print $9} [ DEST ] ` Puppet nuke 1 yum -y remove $( rpm -qa | egrep puppet|^pe- ) ; rm -rf /etc/puppetlabs /opt/puppetlabs /var/log/puppetlabs /etc/sysconfig/p { e-*,uppet } Print SWAP usage by process 1 for file in /proc/*/status ; do awk /VmSwap|Name/{printf $2 $3}END{ print } $file ; done | sort -k 2 -n -r | less Test mail CLI Sendmail 1 echo Subject: E-mail test | sendmail -v $EMAIL_ADDRESS Mailx (attachment) 1 echo Special delivery | mailx -s Hello -a testfile1 $EMAIL_ADDRESS Shell keepalive 1 while true ; do echo jh ; sleep 30 ; done","title":"Shell"},{"location":"linux/shell/#shell","text":"All things shell","title":"Shell"},{"location":"linux/shell/#miscellenous-glorious-one-liners","text":"Finds anything in current directory that isn't zipped and zips it 1 find . -type f ! -iname *.gz -exec gzip {} \\; Get external IP from CLI Curl 1 curl http://checkip.amazonaws.com/ DNS 1 dig +short myip.opendns.com @resolver1.opendns.com Move files based on date 1 mv ` ll | grep Jan 31 | awk {print $9} [ DEST ] ` Puppet nuke 1 yum -y remove $( rpm -qa | egrep puppet|^pe- ) ; rm -rf /etc/puppetlabs /opt/puppetlabs /var/log/puppetlabs /etc/sysconfig/p { e-*,uppet } Print SWAP usage by process 1 for file in /proc/*/status ; do awk /VmSwap|Name/{printf $2 $3}END{ print } $file ; done | sort -k 2 -n -r | less Test mail CLI Sendmail 1 echo Subject: E-mail test | sendmail -v $EMAIL_ADDRESS Mailx (attachment) 1 echo Special delivery | mailx -s Hello -a testfile1 $EMAIL_ADDRESS Shell keepalive 1 while true ; do echo jh ; sleep 30 ; done","title":"Miscellenous / Glorious one-liners"},{"location":"linux/ssh/","text":"OpenSSH Configuration Boilerplate ssh configuration: ~/.ssh/id_rsa 1 2 3 4 5 6 7 8 Host example Hostname example.jhcloud.io User jhughes Port 2222 IdentityFile ~/.ssh/id_rsa ForwardAgent yes ForwardX11 yes ProxyJump jhughes@jumphost.jhcloud.io Further reading OpenSSH Cookbook","title":"OpenSSH"},{"location":"linux/ssh/#openssh","text":"","title":"OpenSSH"},{"location":"linux/ssh/#configuration","text":"Boilerplate ssh configuration: ~/.ssh/id_rsa 1 2 3 4 5 6 7 8 Host example Hostname example.jhcloud.io User jhughes Port 2222 IdentityFile ~/.ssh/id_rsa ForwardAgent yes ForwardX11 yes ProxyJump jhughes@jumphost.jhcloud.io","title":"Configuration"},{"location":"linux/ssh/#further-reading","text":"OpenSSH Cookbook","title":"Further reading"}]}